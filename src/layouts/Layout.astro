---
import 'open-props/index.css'
import 'open-props/normalize.css'
import 'open-props/utilities.css'

interface Props {
	title: string;
}

const { title } = Astro.props;
import grunge from '../assets/paint-grunge-60.webp'
import logo from '../assets/bad-logo-hero.svg';
import twCard from '../assets/twitter-card.png';
const grungeSrc = `url(${grunge.src})`;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Bad at CSS Podcast" />
		<meta name="viewport" content="width=device-width" />
		<meta name="theme-color" content="Canvas" />
    <meta name="color-scheme" content="dark light" />
    <meta name="view-transition" content="same-origin" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link rel="stylesheet" href="https://use.typekit.net/fzl5nql.css">
		<link rel="preload" fetchpriority="high" as="image" href={grunge.src} type="image/webp">
		<link rel="preload" fetchpriority="high" as="image" href={logo.src} type="image/svg">
		<script src="../click-card.js"></script>
		<script defer data-domain="badatcss.com" src="https://plausible.io/js/script.js"></script>
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:creator" content="@_davideast" />
		<meta name="twitter:title" content="Bad at CSS" />
		<meta name="og:title" content="Bad at CSS" />
		<meta name="twitter:description" content="A podcast for those who are bad at CSS" />
		<meta name="og:description" content="A podcast for those who are bad at CSS" />
		<meta name="twitter:image" content={twCard.src} />
		<meta name="og:image" content={twCard.src} />
		<title>{title}</title>
	</head>
	<body>
		<main>
			<slot />
		</main>
	</body>
</html>
<style is:global define:vars={{ grungeSrc }}>
	@import 'theme.css';

	click-card {
		display: contents;
	}

	main {
		background-image: var(--grungeSrc);
    background-position: center;
		background-position-y: 20px;
		background-repeat: no-repeat;
		padding: 16px;
		display: grid;
		grid-template-columns: 
		[full-start] 
			1fr
		[center-start] min(100%, 680px) [center-end]
			1fr
		[full-end];
		row-gap: 144px;

		& > * {
			grid-column: center;
		}
	}

	body {
		place-content: center;
		line-height: 1.5;
	}
</style>
